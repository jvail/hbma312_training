import notebook_util as nu ; reload(nu)
from notebook_util import notebook
exec(notebook('Apple Tree Simulation - Organs.ipynb'))

from math import *

cdate = None
def initcdate():
  global cdate
  cdate = meteo.get_first_day_for_temperature()+timedelta(days=120)

initcdate()

def Start():
  initcdate()


def StartEach():
  global cdate
  cdate += timedelta(days=1)

module Meristem
module Leaf
module Internode


Axiom: Internode(ParameterSet(length=0.01, finallength = internode_length(rank = 1), width=0.01, ttime = 0)) [&(60) Leaf(ParameterSet(area=0, finalarea = leaf_area(rank = 1), ttime = 0)) ]

derivation length: 100
production:

Internode(p) :
  # Use mthermaltime to get the effective temperature of the day 
  # and store it in variable ctime.
  # Accumulate it into variable p.ttime.
  # Compute length increment with growth_rate function. 
  # Parameterize it with p.finallength, tip_internode and b_internode.
  # Integrate grow rate on ctime to have length increase. 
  # Add it to p.length variable
  # Do the same on the width variable
  
  produce Internode(p)

Leaf(p):
  # Similar approach than with Internode but apply it for the growth of area
  
  produce Leaf(p)

interpretation:

Internode(p) --> _(p.width) F(p.length)

Leaf(p) :
  if p.area > 0:
    width = sqrt(p.area / 1.4)
    length = 2 * width
    produce ,(10)  SetContour(leafsection) TextureVScale(1./length) _(width/2) F(length)


Flower(t) :
  nproduce [ F(3) ,(11) &(90) TextureScale(1) @o(5)]

Fruit :
  nproduce [ @v @h &(90) @Tp(0,0,-1) @Ts(0.1) ,(2) _(0.05) nF(1,0.1)  ,(3) f(1.5) @g(Revolution(applesection),3) ]


endlsystem
###### INITIALISATION ######

__lpy_code_version__ = 1.1

def __initialiseContext__(context):
	import openalea.plantgl.all as pgl
	PGL_140198948795360 = pgl.ImageTexture("PGL_140198948795360" , "./apple-leaf.png" , )
	PGL_140198948795360.name = "PGL_140198948795360"
	Color_10 = pgl.Texture2D(image = PGL_140198948795360 , )
	Color_10.name = "Color_10"
	context.turtle.setMaterial(10,Color_10)
	import openalea.plantgl.all as pgl
	leafsection = pgl.Polyline2D(	
	    pgl.Point2Array([(-1.01037, 0.524751),(-0.0030303, -0.00517379),(1.01037, 0.503186)]) , 
	    )
	leafsection.name = "leafsection"
	applesection = pgl.NurbsCurve2D(	
	    ctrlPointList = pgl.Point3Array([(-0.000874121, -0.389685, 1),(0.0162006, -0.606468, 1),(0.629545, -0.424825, 1),(0.712296, 0.0104895, 1),(0.645105, 0.516783, 1),(-0.00961528, 0.627098, 1),(-0.0171328, 0.394231, 1)]) , 
	    )
	applesection.name = "applesection"
	panel_0 = ({'active': True, 'visible': True, 'name': 'Panel 1'},[('Curve2D',leafsection),('Curve2D',applesection)])
	parameterset = [panel_0,]
	context["__functions__"] = []
	context["__curves__"] = [('leafsection',leafsection),('applesection',applesection),]
	context["__parameterset__"] = parameterset
	context["leafsection"] = leafsection
	context["applesection"] = applesection
