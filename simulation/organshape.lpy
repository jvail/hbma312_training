from math import *
from openalea.plantgl.all import Revolution

module Meristem
module Leaf
module Internode
module SimuInfo
module Flower
module Fruit

Axiom:  Internode(ParameterSet(length = 2, width=0.1)) [&(60) Leaf(ParameterSet(area = 35,ttime = 0)) ]


derivation length: 1
production:

interpretation:
group 0:

Internode(p) --> _(p.width) F(p.length)

Leaf(p) :
  if p.area > 0:
    width = sqrt(p.area / 1.4)
    length = 2 * width
    produce 

Flower(t) :
  nproduce [ F(3) ,(11) &(90) TextureScale(1) @o(5)]

Fruit :
  nproduce [ @v @h &(90) @Tp(0,0,-1) @Ts(0.1) ,(2) _(0.05) nF(1,0.1)  ,(3) f(1.5) @g(Revolution(applesection),3) ]


endlsystem
###### INITIALISATION ######

__lpy_code_version__ = 1.1

def __initialiseContext__(context):
	import openalea.plantgl.all as pgl
	Color_10 = pgl.Material("Color_10" , ambient = (30,60,10) , diffuse = 3 , )
	Color_10.name = "Color_10"
	context.turtle.setMaterial(10,Color_10)
	Color_11 = pgl.Material("Color_11" , ambient = (60,60,15) , diffuse = 3 , )
	Color_11.name = "Color_11"
	context.turtle.setMaterial(11,Color_11)
	import openalea.plantgl.all as pgl
	applesection = pgl.NurbsCurve2D(	
	    ctrlPointList = pgl.Point3Array([(-0.000874121, -0.389685, 1),(0.0162006, -0.606468, 1),(0.629545, -0.424825, 1),(0.712296, 0.0104895, 1),(0.645105, 0.516783, 1),(-0.00961528, 0.627098, 1),(-0.0171328, 0.394231, 1)]) , 
	    )
	applesection.name = "applesection"
	panel_0 = ({'active': True, 'visible': True, 'name': 'Panel 1'},[('Curve2D',applesection)])
	parameterset = [panel_0,]
	context["__functions__"] = []
	context["__curves__"] = [('applesection',applesection),]
	context["__parameterset__"] = parameterset
	context["applesection"] = applesection
